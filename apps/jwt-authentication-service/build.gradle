plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.ilyeszouaoui'
version = '1.0.0'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation("com.google.guava:guava:30.1.1-jre")
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly("org.flywaydb:flyway-core")
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2', 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	runtimeOnly("org.postgresql:postgresql")
	runtimeOnly 'org.testcontainers:postgresql:1.15.1'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}
tasks.test {

	def propagateIfPresent = { propertyName ->
		if (System.getProperties().containsKey(propertyName))
			systemProperty(propertyName, System.getProperty(propertyName))

	}

	useJUnitPlatform()
	propagateIfPresent("spring.datasource.url")
	propagateIfPresent("spring.datasource.username")
	propagateIfPresent("spring.datasource.password")
	propagateIfPresent("spring.datasource.driver-class-name")
}
